Que==Happy number
sol with best space and time complexity


class Solution {
    public boolean isHappy(int n) {
        
        int sum = 0;
        Set<Integer> set = new HashSet();
        while(true){
            while(n != 0){
                int digits = n%10;
                n = n/10;
                sum += digits*digits;
            }
            
            if(sum == 1){
                return true;
            }
            
            if(set.contains(sum)){
                return false;
            } else {
                set.add(sum);
            }
            
            n = sum;
            sum = 0;
        }
   }
}


My answer:=
class Solution 
{
    public boolean isHappy(int n) 
    {
        HashMap<Integer,Integer> hm=new HashMap<>();
        hm.put(0,1);
        while(n!=1)
        {
            hm.put(n,1);
        
        ArrayList<Integer> al=new ArrayList<>();
        while(n>1)
        {
            int temp=n%10;
            al.add(temp);
            n=n/10;
        }
        for(int i=0;i<al.size();i++)
        {
            n=n+(int)Math.pow(al.get(i),2);
        }
        if(hm.containsKey(n))
        {
            return false;
        }
        }
     return true;   
    }
}
